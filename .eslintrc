{
  "env": {
    "node": true,
    "es2020": true,
    "browser": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": [
    "@typescript-eslint",
    "import",
    "react"
  ],
  "settings": {
    "react": {
      "version": "16.14"
    },
    "import/extensions": [".js", ".jsx", ".ts", ".tsx"],
    "import/resolver": { "node": { "extensions": [".js", ".jsx", ".ts", ".tsx"] } },
    "import/ignore": ["\\.d.ts"],
    "import/parsers": { "@typescript-eslint/parser": [".ts", ".tsx"] }
  },
  "rules": {
    // Possible Errors
    "no-await-in-loop": ["error"],
    "no-console": ["error", { "allow": ["warn", "error"] }],
    "no-template-curly-in-string": ["error"],
    "no-unsafe-optional-chaining": ["error", { "disallowArithmeticOperators": true }],
    "require-atomic-updates": ["error"],

    // Best Practices
    "accessor-pairs": ["error", { "setWithoutGet": true }],
    "array-callback-return": ["error"],
    "block-scoped-var": ["error"],
    "class-methods-use-this": ["error"],
    "consistent-return": ["error"],
    "curly": ["error", "all"],
    "default-case": ["error"],
    "default-case-last": ["error"],
    "dot-location": ["error", "property"],
    "eqeqeq": ["error"],
    "grouped-accessor-pairs": ["error"],
    "guard-for-in": ["error"],
    "max-classes-per-file": ["error"],
    "no-alert": ["error"],
    "no-caller": ["error"],
    "no-constructor-return": ["error"],
    "no-else-return": ["error"],
    "no-empty-function": ["error"],
    "no-eval": ["error"],
    "no-extend-native": ["error"],
    "no-floating-decimal": ["error"],
    "no-implicit-coercion": ["error"],
    "no-implicit-globals": ["error"],
    "no-implied-eval": ["error"],
    "no-labels": ["error"],
    "no-lone-blocks": ["error"],
    "no-multi-spaces": ["error"],
    "no-multi-str": ["error"],
    "no-new": ["error"],
    "no-new-func": ["error"],
    "no-new-wrappers": ["error"],
    "no-nonoctal-decimal-escape": ["error"],
    "no-octal-escape": ["error"],
    "no-param-reassign": ["error"],
    "no-proto": ["error"],
    "no-return-assign": ["error"],
    "no-script-url": ["error"],
    "no-self-compare": ["error"],
    "no-unmodified-loop-condition": ["error"],
    "no-useless-concat": ["error"],
    "no-useless-return": ["error"],
    "no-void": ["error"],
    "prefer-promise-reject-errors": ["error"],
    "prefer-regex-literals": ["error"],
    "radix": ["error"],

    // Variables
    "no-undef-init": ["error"],
    "no-undefined": ["error"],

    // Stylistic Issues
    "array-bracket-newline": ["error", "consistent"],
    "array-bracket-spacing": ["error"],
    "array-element-newline": ["error", "consistent"],
    "block-spacing": ["error"],
    "camelcase": ["error"],
    "comma-style": ["error"],
    "computed-property-spacing": ["error"],
    "consistent-this": ["error", "self"],
    "eol-last": ["error"],
    "function-call-argument-newline": ["error", "consistent"],
    "function-paren-newline": ["error", "consistent"],
    "implicit-arrow-linebreak": ["error"],
    "jsx-quotes": ["error"],
    "key-spacing": ["error"],
    "lines-around-comment": ["error"],
    "max-len": ["error", { "code": 120 , "ignoreStrings": true }],
    "multiline-comment-style": ["error", "bare-block"],
    "new-cap": ["error"],
    "new-parens": ["error"],
    "no-array-constructor": ["error"],
    "no-bitwise": ["error"],
    "no-continue": ["error"],
    "no-inline-comments": ["error"],
    "no-lonely-if": ["error"],
    "no-mixed-operators": ["error"],
    "no-multi-assign": ["error"],
    "no-multiple-empty-lines": ["error"],
    "no-nested-ternary": ["error"],
    "no-new-object": ["error"],
    "no-plusplus": ["error"],
    "no-trailing-spaces": ["error"],
    "no-underscore-dangle": ["error", { "allow": ["__SITE_SETTINGS__", "__NEXT_REDUX_STORE__"] }],
    "no-unneeded-ternary": ["error"],
    "no-whitespace-before-property": ["error"],
    "nonblock-statement-body-position": ["error"],
    "object-curly-newline": ["error", { "consistent": true }],
    "object-property-newline": ["error"],
    "one-var": ["error", "never"],
    "operator-assignment": ["error"],
    "operator-linebreak": ["error", "before"],
    "padded-blocks": ["error", "never"],
    "quote-props": ["error", "as-needed"],
    "semi-spacing": ["error"],
    "semi-style": ["error"],
    "space-before-blocks": ["error"],
    "space-in-parens": ["error"],
    "space-unary-ops": ["error", { "words": true, "nonwords": false }],
    "spaced-comment": ["error", "always"],
    "switch-colon-spacing": ["error"],
    "template-tag-spacing": ["error"],
    "wrap-regex": ["error"],

    // ECMAScript 6
    "arrow-body-style": ["error"],
    "arrow-parens": ["error"],
    "arrow-spacing": ["error"],
    "no-useless-computed-key": ["error"],
    "no-var": ["error"],
    "prefer-const": ["error"],
    "prefer-destructuring": ["error"],
    "prefer-rest-params": ["error"],
    "prefer-template": ["error"],
    "rest-spread-spacing": ["error"],
    "template-curly-spacing": ["error"],

    // eslint-plugin-import

    // Static analysis
    "import/no-unresolved": ["error"],
    "import/named": ["error"],
    "import/default": ["error"],
    "import/namespace": ["error"],
    "import/no-absolute-path": ["error"],
    "import/no-self-import": ["error"],
    "import/no-cycle": ["error"],
    "import/no-useless-path-segments": ["error"],

    // Helpful warnings
    "import/export": ["error"],
    "import/no-named-as-default": ["error"],
    "import/no-named-as-default-member": ["error"],
    "import/no-extraneous-dependencies": ["error"],
    "import/no-mutable-exports": ["error"],

    // Style guide
    "import/first": ["error"],
    "import/no-duplicates": ["error"],
    "import/order": ["error", {
      "newlines-between": "always",
      "alphabetize": { "order" : "asc", "caseInsensitive" : true }
    }],
    "import/newline-after-import": ["error"],
    "import/no-unassigned-import": ["error"],
    "import/no-named-default": ["error"],

    // eslint-plugin-react

    // supported rules
    "react/boolean-prop-naming": ["error", {
      "rule": "^(is|has|can)[A-Z]([A-Za-z0-9]?)+",
      "validateNested": true
    }],
    "react/default-props-match-prop-types": ["error"],
    "react/destructuring-assignment": ["error"],
    "react/display-name": "off",
    "react/forbid-foreign-prop-types": ["error"],
    "react/forbid-prop-types": ["error"],
    "react/function-component-definition": ["error", { "namedComponents": "arrow-function" }],
    "react/no-array-index-key": ["error"],
    "react/no-danger": ["error"],
    "react/no-deprecated": ["error"],
    "react/no-multi-comp": ["error"],
    "react/no-redundant-should-component-update": ["error"],
    "react/no-this-in-sfc": ["error"],
    "react/no-typos": ["error"],
    "react/no-unstable-nested-components": ["error"],
    "react/no-unused-prop-types": ["error"],
    "react/no-unused-state": ["error"],
    "react/prefer-es6-class": ["error"],
    "react/prefer-read-only-props": ["error"],
    "react/prefer-stateless-function": ["error"],
    "react/require-default-props": ["error"],
    "react/self-closing-comp": ["error"],
    "react/sort-comp": ["error"],
    "react/sort-prop-types": ["error", {
      "callbacksLast": true,
      "ignoreCase": true,
      "requiredFirst": true,
      "sortShapeProp": true,
      "noSortAlphabetically": true
    }],
    "react/state-in-constructor": ["error"],
    "react/static-property-placement": ["error", "property assignment"],

    // JSX-specific rules
    "react/jsx-boolean-value": ["error"],
    "react/jsx-child-element-spacing": ["error"],
    "react/jsx-closing-bracket-location": ["error"],
    "react/jsx-closing-tag-location": ["error"],
    "react/jsx-curly-brace-presence": ["error", { "props": "always", "children": "never" }],
    "react/jsx-curly-newline": ["error"],
    "react/jsx-curly-spacing": ["error"],
    "react/jsx-equals-spacing": ["error"],
    "react/jsx-filename-extension": ["error"],
    "react/jsx-first-prop-new-line": ["error"],
    "react/jsx-fragments": ["error", "syntax"],
    "react/jsx-handler-names": ["error"],
    "react/jsx-indent": ["error", "tab"],
    "react/jsx-indent-props": ["error", "tab"],
    "react/jsx-max-props-per-line": ["error"],
    "react/jsx-no-bind": ["error"],
    "react/jsx-no-constructed-context-values": ["error"],
    "react/jsx-no-script-url": ["error"],
    "react/jsx-no-useless-fragment": ["error"],
    "react/jsx-one-expression-per-line": ["error"],
    "react/jsx-pascal-case": ["error"],
    "react/jsx-props-no-multi-spaces": ["error"],
    "react/jsx-props-no-spreading": ["error"],
    "react/jsx-sort-props": ["error", {
      "callbacksLast": true,
      "shorthandLast": true,
      "ignoreCase": true,
      "noSortAlphabetically": true,
      "reservedFirst": true
    }],
    "react/jsx-tag-spacing": ["error", {
      "closingSlash": "never",
      "beforeSelfClosing": "never",
      "afterOpening": "never",
      "beforeClosing": "never"
    }],
    "react/jsx-wrap-multilines": ["error", {
      "declaration": "parens-new-line",
      "assignment": "parens-new-line",
      "return": "parens-new-line",
      "arrow": "parens-new-line",
      "condition": "parens-new-line",
      "logical": "parens-new-line",
      "prop": "parens-new-line"
    }],

    // TS
    "@typescript-eslint/array-type": ["error", { "default": "generic" }],
    "@typescript-eslint/ban-tslint-comment": ["error"],
    "@typescript-eslint/consistent-indexed-object-style": ["error"],
    "@typescript-eslint/consistent-type-assertions": ["error"],
    "@typescript-eslint/consistent-type-definitions": ["error"],
    "@typescript-eslint/member-delimiter-style": ["error"],
    "@typescript-eslint/method-signature-style": ["error"],
    "@typescript-eslint/naming-convention": ["error", {
      "selector": "interface",
      "format": ["PascalCase"],
      "custom": {
        "regex": "^I[A-Z]",
        "match": true
      }
    }],
    "@typescript-eslint/no-confusing-non-null-assertion": ["error"],
    "@typescript-eslint/no-confusing-void-expression": ["error"],
    "@typescript-eslint/no-extraneous-class": ["error"],
    "@typescript-eslint/no-invalid-void-type": ["error"],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": ["error"],
    // "@typescript-eslint/no-unnecessary-condition": ["error"],
    "@typescript-eslint/no-unnecessary-type-arguments": ["error"],
    "@typescript-eslint/no-unnecessary-type-constraint": ["error"],
    "@typescript-eslint/prefer-enum-initializers": ["error"],
    "@typescript-eslint/prefer-function-type": ["error"],
    "@typescript-eslint/prefer-includes": ["error"],
    "@typescript-eslint/prefer-nullish-coalescing": ["error"],
    "@typescript-eslint/prefer-optional-chain": ["error"],
    "@typescript-eslint/promise-function-async": ["error"],
    "@typescript-eslint/switch-exhaustiveness-check": ["error"],
    "@typescript-eslint/type-annotation-spacing": ["error"],

    // Extension Rules
    "brace-style": "off",
    "@typescript-eslint/brace-style": ["error"],
    "comma-dangle": "off",
    "@typescript-eslint/comma-dangle": ["error", {
      "arrays": "never",
      "objects": "always-multiline",
      "imports": "always-multiline",
      "exports": "always-multiline",
      "functions": "always-multiline"
    }],
    "comma-spacing": "off",
    "@typescript-eslint/comma-spacing": ["error"],
    "default-param-last": "off",
    "@typescript-eslint/default-param-last": ["error"],
    "dot-notation": "off",
    "@typescript-eslint/dot-notation": ["error"],
    "func-call-spacing": "off",
    "@typescript-eslint/func-call-spacing": ["error"],
    "indent": "off",
    "@typescript-eslint/indent": ["error", "tab"],
    "init-declarations": "off",
    "@typescript-eslint/init-declarations": ["error", "always"],
    "keyword-spacing": "off",
    "@typescript-eslint/keyword-spacing": ["error"],
    "lines-between-class-members": "off",
    "@typescript-eslint/lines-between-class-members": ["error"],
    "no-dupe-class-members": "off",
    "@typescript-eslint/no-dupe-class-members": ["error"],
    "no-duplicate-imports": "off",
    "@typescript-eslint/no-duplicate-imports": ["error"],
    "no-invalid-this": "off",
    "@typescript-eslint/no-invalid-this": ["error"],
    "no-loop-func": "off",
    "@typescript-eslint/no-loop-func": ["error"],
    "no-loss-of-precision": "off",
    "@typescript-eslint/no-loss-of-precision": ["error"],
    "no-magic-numbers": "off",
    "@typescript-eslint/no-magic-numbers": ["error", {
        "ignore": [0,1],
        "ignoreArrayIndexes": true
    }],
    "no-redeclare": "off",
    "@typescript-eslint/no-redeclare": ["error"],
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "no-throw-literal": "off",
    "@typescript-eslint/no-throw-literal": ["error"],
    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": ["error"],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["error"],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error", { "functions": false }],
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": ["error"],
    "object-curly-spacing": "off",
    "@typescript-eslint/object-curly-spacing": ["error", "always", {
      "arraysInObjects": false,
      "objectsInObjects": true
    }],
    "quotes": "off",
    "@typescript-eslint/quotes": ["error", "single"],
    "no-return-await": "off",
    "@typescript-eslint/return-await": "error",
    "semi": "off",
    "@typescript-eslint/semi": ["error"],
    "space-before-function-paren": "off",
    "@typescript-eslint/space-before-function-paren": ["error", {
      "anonymous": "always",
      "named": "never",
      "asyncArrow": "always"
    }],
    "space-infix-ops": "off",
    "@typescript-eslint/space-infix-ops": ["error"],

    // Временно
    "@typescript-eslint/ban-ts-comment": "off",

    // overrides
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off"
  },
  "overrides": [
    {
      // enable the rule specifically for TypeScript files
      "files": ["*.ts", "*.tsx"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": ["error"],
        "@typescript-eslint/explicit-module-boundary-types": ["error"]
      }
    },
    {
      "files": ["*.test.ts"],
      "rules": {
        "@typescript-eslint/no-magic-numbers": "off"
      }
    }
  ]
}
